@using EnglishNow.Web.Models.Menu
@model EnglishNow.Web.Models.Professor.EditarViewModel

@{
    ViewData["Title"] = "Editar professor - ";
    ViewData["Menu"] = Menu.Professor;
}

<h1>Editar Professor</h1>

<form class="row g-3 needs-validation" asp-controller="Professor" asp-action="Editar" novalidate>

    <input type="hidden" asp-for="Id"/>

    <input type="hidden" asp-for="UsuarioId"/>

    <div class="col-md-6">
        <label for="inputLogin" class="form-label">Login</label>
        <input type="text" class="form-control" id="inputLogin" asp-for="Login" required>
    </div>
    <div class="col-md-6">
        <label for="inputSenha" class="form-label">Senha</label>
        <input type="text" class="form-control" id="inputSenha" asp-for="Senha" required>
    </div>
    <div class="col-12">
        <label for="inputNome" class="form-label">Nome</label>
        <input type="text" class="form-control" id="inputNome" asp-for="Nome" required>
    </div>
    <div class="col-12">
        <label for="inputEmail" class="form-label">Email</label>
        <input type="email" class="form-control" id="inputEmail" asp-for="Email" required>
    </div>
    <div class="col-12">
        <button type="submit" class="btn btn-primary">Salvar</button>
        <button type="submit" class="btn btn-danger mx-2" formaction="@Url.Action("Excluir", "Professor", new { id = Model.Id })">Excluir</button>
    </div>

    @Html.ValidationSummary(false, "", new { @class = "text-danger" })

    @if (TempData["Erro"] != null)
    {
        <div class="alert alert-danger">
            @TempData["Erro"]
        </div>
    }

</form>

<div class="card">
    <div class="card-header">
        Turmas do Professor
    </div>
    <div class="card-body">

        @if (Model.TurmasProfessor == null || Model.TurmasProfessor.Count == 0)
        {
            <p class="card-text">Nenhuma turma encontrada</p>
        }
        else
        {
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th scope="col">Id</th>
                            <th scope="col">Semestre</th>
                            <th scope="col">Ano</th>
                            <th scope="col">Período</th>
                            <th scope="col">Nível</th>
                            <th scope="col"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var turma in Model.TurmasProfessor)
                        {
                            <tr>
                                <th>@turma.Id</th>
                                <th>@($"{turma.Semestre}° semestre") </th>
                                <td>@turma.Ano</td>
                                <td>@turma.Periodo</td>
                                <td>@turma.Nivel</td>
                                <td>
                                    <a class="link-underline link-underline-opacity-0" asp-controller="Turma" asp-action="Editar" asp-route-id="@turma.Id">Editar</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
    </div>
</div>



@section Scripts {
    <script>
         (() => {
          'use strict'

          // Fetch all the forms we want to apply custom Bootstrap validation styles to
          const forms = document.querySelectorAll('.needs-validation')

          // Loop over them and prevent submission
          Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
              if (!form.checkValidity()) {
                event.preventDefault()
                event.stopPropagation()
              }

              form.classList.add('was-validated')
            }, false)
          })
        })()
    </script>
}